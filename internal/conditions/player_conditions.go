// Code generated by cql-gen v0.1.0, DO NOT EDIT.
package conditions

import (
	condition "github.com/FrancoLiberali/cql/condition"
	model "github.com/FrancoLiberali/cql/model"
	models "github.com/yyewolf/rwbyadv3/models"
	"time"
)

type playerConditions struct {
	ID        condition.Field[models.Player, model.UUID]
	CreatedAt condition.Field[models.Player, time.Time]
	UpdatedAt condition.Field[models.Player, time.Time]
	DeletedAt condition.Field[models.Player, time.Time]
	DiscordID condition.StringField[models.Player]
}

var Player = playerConditions{
	CreatedAt: condition.NewField[models.Player, time.Time]("CreatedAt", "", ""),
	DeletedAt: condition.NewField[models.Player, time.Time]("DeletedAt", "", ""),
	DiscordID: condition.NewStringField[models.Player]("DiscordID", "", ""),
	ID:        condition.NewField[models.Player, model.UUID]("ID", "", ""),
	UpdatedAt: condition.NewField[models.Player, time.Time]("UpdatedAt", "", ""),
}

// Preload allows preloading the Player when doing a query
func (playerConditions playerConditions) preload() condition.Condition[models.Player] {
	return condition.NewPreloadCondition[models.Player](playerConditions.ID, playerConditions.CreatedAt, playerConditions.UpdatedAt, playerConditions.DeletedAt, playerConditions.DiscordID)
}
